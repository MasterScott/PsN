#!/usr/bin/perl

# Runs the system tests for multiple versions of NONMEM
# All arguments starting with "-" will be passed through to prove
# All other arguments are treated as nonmem versions to run
# For example: runsystem nm72 nm73 -j4

use strict;
use Config;
use includes;
use ext::File::HomeDir;


my @prove_args;
my @nm_versions;

foreach my $arg (@ARGV) {
    if ($arg =~ /^-/) {
        push @prove_args, $arg;
    } else {
        push @nm_versions, $arg;
    }
}

if (scalar(@nm_versions) == 0) {
    push @nm_versions, "default";
}

# If the first nmversion is "all" get all versions from psn.conf
if ($nm_versions[0] eq "all") {
    @nm_versions = ();
    foreach my $version (keys %{$PsN::config->{nm_versions}}) {
        if ($version ne "default") {
            push @nm_versions, $version;
        }
    }
}

sub get_logfile{
	my $version = shift;
	my $dir = home();
	if (defined $PsN::config and (defined $PsN::config-> {'_'}) and
		defined ($PsN::config -> {'_'} -> {'PsN_test_logfile_dir'})){
		#use tempdir from psn.conf instead of default
		$dir = $PsN::config -> {'_'} -> {'PsN_test_logfile_dir'};
	}
	my $logfile = $dir. "/psn_system_test_log_".$version.".txt";
	return $logfile;
}

foreach my $nmversion (@nm_versions) {
	my $logfile = get_logfile($nmversion);
    print "=== Running system tests for NONMEM version: $nmversion ===\n";
    print "=== log file is $logfile\n";
    system("prove system -r @prove_args > $logfile 2>&1 :: -nm_version=$nmversion "); #no -silent since redirect STDERR
}
