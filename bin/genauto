#!/usr/bin/perl

# This script automatically generates scripts for autocompletion of options for PsN binscripts.
# Usage: genauto <file>
#		Output goes to STDOUT


use strict;
use warnings;

sub parse_options
{
	my $filename = shift;
	my %options;
	my @lines;

	open my $sh, '<', $filename;

	while (my $line = <$sh>) {
		if ($line =~ /my %required_options|my %optional_options|\@tool_options =|\@model_options =|my \@script_options/) {
			push @lines, $line;
			if (not $line =~ /\);/) {
				while ($line = <$sh>) {
					push @lines, $line;
					last if ($line =~ /\);/);
				}
			}
		}
	}

	close $sh;

	for my $line (@lines) {
		if ($line =~ /["']([\w\|\?]+)(\:\w|\!|)["']/) {
			my $option_name = $1;
			my $suffix = $2;
			$suffix =~ s/\://;
			if ($option_name =~ /([\w\?]+)\|([\w\?]+)/) {
				$option_name = $1;
				$options{$2} = $suffix;
				$options{'no-' . $2} = '' if ($suffix eq '!');
			}
			$options{$option_name} = $suffix;
			if ($suffix eq '!') {
				$options{'no-' . $option_name} = '';
			}
		}
	}

	return %options;
}

sub print_options
{
	my %options = @_;

	foreach my $option (sort keys %options) {
		print "\t\t-$option";
		print '=' if ($options{$option} ne '!' and $options{$option} ne '');
		print " \\\n";
	}
}

sub check_common_options
{
	my $filename = shift;

	open my $sh, '<', $filename;

	while (<$sh>) {
		if (/\@common_options::get_opt_strings/) {
			close $sh;
			return 1;
		}
	}

	close $sh;
	return 0;
}


my (%options, %common_options);
my $filename = $ARGV[0];
%options = parse_options($filename);

if (check_common_options($filename)) {
	%common_options = parse_options('../lib/common_options.pm');
}


print "_$filename()\n";
print <<'EOF';
{
	local cur opts
	COMPREPLY=()
	cur=${COMP_WORDS[COMP_CWORD]}
	opts=" \
EOF

print_options(%options);
print_options(%common_options);

print <<'EOF';
		"

	if [[ ${cur} == -* ]] ; then
		COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
		COMPREPLY=( "${COMPREPLY[@]/%/ }" )
		COMPREPLY=( "${COMPREPLY[@]/= /=}" )
	else
		COMPREPLY=( $(compgen -f -- ${cur}) )
		COMPREPLY=( "${COMPREPLY[@]/%/ }" )
	fi
}
EOF
print "complete -o nospace -F _$filename $filename\n";
