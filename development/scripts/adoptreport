#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long;
use File::Basename;
use Cwd 'abs_path';

sub usage
{
    my $name = basename($0);
    print("Usage: $name -my=<mydir> -to=<todir>\n");
    print("\n");
    exit;
}

sub error
{
	my $msg = shift;

	print("$msg\n\n");
	exit;
}

my $my;
my $to;
my $help;

my $res = GetOptions(
    'my=s' => \$my, 
    'to=s' => \$to,
    'help' => \$help,
    'h' => \$help,
);

exit unless $res;

if ($help) {
	usage();
}

if (not defined $my or not defined $to) {
    error("Both options -my and -to must be specified");
    usage()
}

if (not -d $to) {
    error("The -to directory does not exist.");
}

if (not -d $my) {
    error("The -my directory does not exist.");
}


opendir my $dh, $my or die $!;
my $count = () = readdir $dh;    # gets count thru ()
if ($count <= 2) {
	error("The -my directory is empty");
}

my $username = getpwuid($<);
my $target_name = $to . "/$username";

if (-e $target_name) {
    unlink $target_name;
}

$my = abs_path($my);

my $rc = symlink($my, $target_name); 
if ($rc == 0) {
    error("Could not create symlink");
}

print "Enter a message: (press ENTER for no message and enter a blank line to end the message)\n";

my @message;
my $row;

do {
    $row = <STDIN>;
    chomp $row;
    if ($row ne "") {
        push @message, $row;
    }
} while (defined $row and $row ne "");

if (scalar(@message)) {
    open my $fh, '>', "$to/$username.txt";
    for $row (@message) {
        print $fh "$row\n";
    }
    close $fh;
}

print "Report SUCCESSFUL\n";
