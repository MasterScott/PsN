#!/usr/bin/perl

use strict;
use warnings;
use Cwd;

sub usage
{
    print("zipm1 <zip|remove|interactive> <dir>\n\n");
    exit;
}

# check for -h
foreach my $arg (@ARGV) {
    if ($arg =~ /^--?h/) {
        usage();
    }
}

my $command = $ARGV[0];
$command = "" if not defined $command;
my $dir = $ARGV[1];

if ($command ne "zip" and $command ne "remove" and $command ne "interactive") {
    usage();
}

#chdir($dir) or die "Error: Cannot change directory to $dir\n";
my $basedir = getcwd();

my $output = readpipe("find $dir -name 'm1' -type d 2>/dev/null");

my @lines = split /\n/, $output;

if (scalar(@lines) == 0) {
    print "Did not find any m1 directories. Exiting.\n";
    exit;
}

if ($command ne "interactive") {
    print "$_\n" for @lines;
    my $read_line;
    while (1) {
        print "Found ", scalar(@lines), " m1 directories. Do you want to ", $command, " them all? [y|n]: ";
        $read_line = <STDIN>;
        chomp $read_line;
        last if ($read_line =~ /^[yn]$/);
    }
    if ($read_line eq "n") {
        print "Exiting\n";
        exit;
    }
}

foreach my $line (@lines) {
    my $do_remove;
    my $do_zip;
    $do_remove = 1 if ($command eq "remove");
    $do_zip = 1 if ($command eq "zip");
    if ($command eq "interactive") {
        my $read_line;
        while (1) {
            print "$line [r(emove)|z(ip)]: ";
            $read_line = <STDIN>;
            chomp $read_line;
            last if ($read_line =~ /^[rz]$/);
        }
        if ($read_line eq "r") {
            $do_remove = 1;
        } else {
            $do_zip = 1;
        }
    }

    if ($do_remove) {

        chdir($line) or die "Error: Could not change directory to $line";
        chdir("..") or die "Error: Could not change directory to $line/..";
        print("Removing $line\n");
        system("rm -rf m1");   # REplace with rmtree
        chdir($basedir) or die "Error: Could not change directory to $basedir";

    } elsif ($do_zip) {

        my $zip = "$line.zip";

        if (not (-e $zip)) {
            print "Zipping $line\n";
            chdir($line) or die "Error: Could not change directory to $line";
            chdir("..") or die "Error: Could not change directory to $line/..";
            system("zip -r m1.zip m1 >/dev/null");
            if (-e "m1.zip") {
                system("rm -rf m1");
            }
            chdir($basedir) or die "Error: Could not change directory to $basedir";
        }
    }
}
